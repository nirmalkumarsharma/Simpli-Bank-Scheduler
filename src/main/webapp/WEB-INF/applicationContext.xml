<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:component-scan base-package="org.eko">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<jpa:repositories base-package="org.eko.repository" />

	<bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="packagesToScan" value="org.eko.entity" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
	</bean>	
 
  <!-- 
 
 	<bean id="dataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name = "driverClassName" value = "com.mysql.jdbc.Driver"/>
      <property name = "url" value = "jdbc:mysql://localhost:3306/Simpli_bank_Scheduler"/>
      <property name = "username" value = "root"/>
      <property name = "password" value = "1234"/>
   </bean>
   
  -->
  
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    	<!-- Connection properties -->
    	<property name="driverClass" value="com.mysql.jdbc.Driver" />
    	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/Simpli_bank_Scheduler" />
    	<property name="user" value="root" />
    	<property name="password" value="1234" />
    	
    	<!-- Pool properties -->
    	<property name="minPoolSize" value="5" />
    	<property name="maxPoolSize" value="200" />
    	<property name="acquireIncrement" value="1" />
    	<property name="maxStatements" value="500" />
    	<property name="idleConnectionTestPeriod" value="3000" />
    	<property name="loginTimeout" value="300" />
 	</bean>  
   
 	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.springframework.orm.jpa.JpaTransactionManager"	id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- 	
	<bean id="Job1" class="org.eko.jobs.BusinessJobA">
    	<property name="sessionFactory" ref="sessionFactory"> </property>
	</bean>
	
	<bean name="BusinessJobA" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass">
            <bean factory-bean="Job1" factory-method="setJob1"></bean>
        </property>
	</bean>
	
 	<bean id="BusinessJobA" class="org.eko.jobs.BusinessJobA" />

 	
 	
 	<bean id="quartzJobFactory" class="org.eko.configuration.AutowiringSpringBeanJobFactory">
    	<property name="ignoredUnknownProperties" value="applicationContext"/>
	</bean>    

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="transactionManager" ref="transactionManager"/>
    	<property name="jobFactory" ref="quartzJobFactory"/>
		<property name="overwriteExistingJobs" value="true"/> 
    
    	<property name="autoStartup" value="true" />
    	<property name="schedulerName" value="quartzScheduler"/>
    	<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
	    <property name="waitForJobsToCompleteOnShutdown" value="false"/>
	    <property name="configLocation" value="classpath:quartz.properties" />
    	<property name="quartzProperties">
        <props>
            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
            <prop key="org.quartz.threadPool.threadCount">50</prop>
            <prop key="org.quartz.scheduler.instanceName">AUTO</prop>
            <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
            <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
        </props>
    </property>
</bean>

<bean id="BusinessObjectA" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    <property name="jobClass" value="org.eko.jobs.BusinessJobA"/>
</bean>

<bean id="BusinessObjectB" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    <property name="jobClass" value="org.eko.jobs.BusinessJobB"/>
</bean>

<bean id="BusinessObjectC" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    <property name="jobClass" value="org.eko.jobs.BusinessJobC"/>
</bean>

<bean id="BusinessObjectD" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    <property name="jobClass" value="org.eko.jobs.BusinessJobD"/>
</bean>
-->
</beans>
